{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user01\\\\Desktop\\\\Ben\\\\Sea_Level_Dash\\\\Sea_Level_Dash_app\\\\ScriptVersions\\\\Sea_Level_Dashboard_Aws Ver_04_08_25\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js - Fixed version with all bug fixes\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Container, Row, Col, Card, Form, Tabs, Tab } from 'react-bootstrap';\nimport Plot from 'react-plotly.js';\nimport OSMMap from './components/OSMMap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nfunction App() {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [activeTab, setActiveTab] = useState('graph');\n  const [mapTab, setMapTab] = useState('osm');\n  const [stations, setStations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [graphData, setGraphData] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [predictions, setPredictions] = useState({\n    arima: null,\n    prophet: null\n  });\n  const [selectedStations, setSelectedStations] = useState(['All Stations']);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(50);\n  const plotRef = useRef(null);\n\n  // Initialize stats\n  const [stats, setStats] = useState({\n    current_level: 0,\n    '24h_change': 0,\n    avg_temp: 0,\n    anomalies: 0\n  });\n\n  // Filter states - Fixed date picker to use full day ranges\n  const [filters, setFilters] = useState({\n    startDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    endDate: new Date().toISOString().split('T')[0],\n    dataType: 'default',\n    trendline: 'none',\n    analysisType: 'none',\n    showAnomalies: false,\n    predictionModels: []\n  });\n\n  // Update current time every second\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Fetch stations on mount\n  useEffect(() => {\n    fetchStations();\n  }, []);\n  const fetchStations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/stations`);\n      if (response.ok) {\n        const data = await response.json();\n        setStations(data.stations || []);\n      }\n    } catch (error) {\n      console.error('Error fetching stations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate stats from data\n  const calculateStats = useCallback(data => {\n    if (!data || data.length === 0) return;\n    let currentLevel = 0;\n    let change24h = 0;\n    let avgTemp = 0;\n    let anomalyCount = 0;\n    if (selectedStations.includes('All Stations') || selectedStations.length > 1) {\n      const stationGroups = {};\n      data.forEach(d => {\n        if (!stationGroups[d.Station]) {\n          stationGroups[d.Station] = [];\n        }\n        stationGroups[d.Station].push(d);\n      });\n      let stationCount = 0;\n      Object.values(stationGroups).forEach(stationData => {\n        if (stationData.length > 0) {\n          stationCount++;\n          const levels = stationData.map(d => d.Tab_Value_mDepthC1).filter(v => !isNaN(v));\n          const temps = stationData.map(d => d.Tab_Value_monT2m).filter(v => !isNaN(v));\n          if (levels.length > 0) {\n            currentLevel += levels[levels.length - 1];\n            if (levels.length > 1) {\n              change24h += levels[levels.length - 1] - levels[0];\n            }\n          }\n          if (temps.length > 0) {\n            avgTemp += temps.reduce((a, b) => a + b, 0) / temps.length;\n          }\n          anomalyCount += stationData.filter(d => d.anomaly === -1).length;\n        }\n      });\n      if (stationCount > 0) {\n        currentLevel /= stationCount;\n        change24h /= stationCount;\n        avgTemp /= stationCount;\n      }\n    } else {\n      const levels = data.map(d => d.Tab_Value_mDepthC1).filter(v => !isNaN(v));\n      const temps = data.map(d => d.Tab_Value_monT2m).filter(v => !isNaN(v));\n      if (levels.length > 0) {\n        currentLevel = levels[levels.length - 1];\n        if (levels.length > 1) {\n          change24h = levels[levels.length - 1] - levels[0];\n        }\n      }\n      if (temps.length > 0) {\n        avgTemp = temps.reduce((a, b) => a + b, 0) / temps.length;\n      }\n      anomalyCount = data.filter(d => d.anomaly === -1).length;\n    }\n    setStats({\n      current_level: currentLevel,\n      '24h_change': change24h,\n      avg_temp: avgTemp,\n      anomalies: anomalyCount\n    });\n  }, [selectedStations]);\n\n  // Fetch predictions - STABLE VERSION\n  const fetchPredictions = useCallback(async station => {\n    if (filters.predictionModels.length === 0) {\n      setPredictions({\n        arima: null,\n        prophet: null\n      });\n      return;\n    }\n    try {\n      const params = new URLSearchParams({\n        station: station,\n        model: filters.predictionModels.join(',')\n      });\n      const response = await fetch(`${API_BASE_URL}/predictions?${params}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPredictions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching predictions:', error);\n      setPredictions({\n        arima: null,\n        prophet: null\n      });\n    }\n  }, [filters.predictionModels]);\n\n  // Fetch data - FIXED VERSION to prevent infinite loops\n  const fetchData = useCallback(async () => {\n    if (stations.length === 0 || selectedStations.length === 0) return;\n    setLoading(true);\n    try {\n      let allData = [];\n      if (selectedStations.includes('All Stations')) {\n        const stationList = stations.filter(s => s !== 'All Stations');\n        for (const station of stationList) {\n          const params = new URLSearchParams({\n            station: station,\n            start_date: filters.startDate,\n            end_date: filters.endDate,\n            data_source: filters.dataType,\n            show_anomalies: filters.showAnomalies.toString()\n          });\n          try {\n            const response = await fetch(`${API_BASE_URL}/data?${params}`);\n            if (response.ok) {\n              const data = await response.json();\n              if (Array.isArray(data)) {\n                allData = allData.concat(data);\n              }\n            }\n          } catch (err) {\n            console.error(`Error fetching data for ${station}:`, err);\n          }\n        }\n      } else {\n        for (const station of selectedStations.filter(s => s !== 'All Stations').slice(0, 3)) {\n          const params = new URLSearchParams({\n            station: station,\n            start_date: filters.startDate,\n            end_date: filters.endDate,\n            data_source: filters.dataType,\n            show_anomalies: filters.showAnomalies.toString()\n          });\n          try {\n            const response = await fetch(`${API_BASE_URL}/data?${params}`);\n            if (response.ok) {\n              const data = await response.json();\n              if (Array.isArray(data)) {\n                allData = allData.concat(data);\n              }\n            }\n          } catch (err) {\n            console.error(`Error fetching data for ${station}:`, err);\n          }\n        }\n      }\n      if (Array.isArray(allData) && allData.length > 0) {\n        setGraphData(allData);\n\n        // For table view, add calculated values\n        const enrichedData = allData.map((row, index) => {\n          const enriched = {\n            ...row\n          };\n\n          // Add trendline value if selected\n          if (filters.trendline !== 'none' && allData.length > 1) {\n            var _trendlineData$y;\n            const trendlineData = calculateTrendline(allData, filters.trendline);\n            enriched.trendlineValue = (trendlineData === null || trendlineData === void 0 ? void 0 : (_trendlineData$y = trendlineData.y) === null || _trendlineData$y === void 0 ? void 0 : _trendlineData$y[index]) || 'N/A';\n          }\n\n          // Add analysis value if selected\n          if (filters.analysisType !== 'none' && allData.length > 1) {\n            const analysisData = calculateAnalysis(allData, filters.analysisType);\n            if (Array.isArray(analysisData)) {\n              var _analysisData$, _analysisData$$y;\n              enriched.analysisValue = ((_analysisData$ = analysisData[0]) === null || _analysisData$ === void 0 ? void 0 : (_analysisData$$y = _analysisData$.y) === null || _analysisData$$y === void 0 ? void 0 : _analysisData$$y[index]) || 'N/A';\n            } else {\n              var _analysisData$y;\n              enriched.analysisValue = (analysisData === null || analysisData === void 0 ? void 0 : (_analysisData$y = analysisData.y) === null || _analysisData$y === void 0 ? void 0 : _analysisData$y[index]) || 'N/A';\n            }\n          }\n          return enriched;\n        });\n        const sortedData = enrichedData.sort((a, b) => new Date(a.Tab_DateTime || a.Date) - new Date(b.Tab_DateTime || b.Date));\n        setTableData(sortedData);\n        setCurrentPage(1);\n        calculateStats(allData);\n      } else {\n        setGraphData([]);\n        setTableData([]);\n        setStats({\n          current_level: 0,\n          '24h_change': 0,\n          avg_temp: 0,\n          anomalies: 0\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [filters.startDate, filters.endDate, filters.dataType, filters.showAnomalies, filters.trendline, filters.analysisType, selectedStations, stations, calculateStats]);\n\n  // AUTO-UPDATE: Fetch data when filters or stations change - FIXED\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      fetchData();\n    }, 300); // Debounce data fetching\n\n    return () => clearTimeout(timeoutId);\n  }, [filters.startDate, filters.endDate, filters.dataType, filters.showAnomalies, selectedStations]);\n\n  // SEPARATE EFFECT: Handle predictions to prevent infinite loops\n  useEffect(() => {\n    if (filters.predictionModels.length > 0 && selectedStations.length === 1 && !selectedStations.includes('All Stations') && graphData.length > 0) {\n      fetchPredictions(selectedStations[0]);\n    } else {\n      setPredictions({\n        arima: null,\n        prophet: null\n      });\n    }\n  }, [filters.predictionModels, selectedStations, fetchPredictions, graphData.length]);\n\n  // Handle station selection (support multi-select up to 3)\n  const handleStationChange = value => {\n    if (value === 'All Stations') {\n      setSelectedStations(['All Stations']);\n    } else {\n      setSelectedStations(prev => {\n        if (prev.includes(value)) {\n          return prev.filter(s => s !== value);\n        } else if (prev.length < 3 && !prev.includes('All Stations')) {\n          return [...prev, value];\n        } else {\n          return [value];\n        }\n      });\n    }\n  };\n\n  // Handle filter changes - data will auto-update via useEffect\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Calculate trendline\n  const calculateTrendline = (data, period) => {\n    if (!data || data.length < 2) return null;\n    const periodDays = {\n      '7d': 7,\n      '30d': 30,\n      '90d': 90,\n      '1y': 365,\n      'last_decade': 3650,\n      'last_two_decades': 7300,\n      'all': null\n    };\n    const days = periodDays[period];\n    let filteredData = data;\n    if (days !== null) {\n      const endDate = new Date(data[data.length - 1].Tab_DateTime);\n      const startDate = new Date(endDate - days * 24 * 60 * 60 * 1000);\n      filteredData = data.filter(d => new Date(d.Tab_DateTime) >= startDate);\n    }\n    if (filteredData.length < 2) return null;\n    const n = filteredData.length;\n    const xValues = filteredData.map((_, i) => i);\n    const yValues = filteredData.map(d => d.Tab_Value_mDepthC1);\n    const sumX = xValues.reduce((a, b) => a + b, 0);\n    const sumY = yValues.reduce((a, b) => a + b, 0);\n    const sumXY = xValues.reduce((sum, x, i) => sum + x * yValues[i], 0);\n    const sumXX = xValues.reduce((sum, x) => sum + x * x, 0);\n    const slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);\n    const intercept = (sumY - slope * sumX) / n;\n    return {\n      x: filteredData.map(d => d.Tab_DateTime),\n      y: xValues.map(x => slope * x + intercept),\n      type: 'scatter',\n      mode: 'lines',\n      name: `Trendline (${period})`,\n      line: {\n        color: 'yellow',\n        dash: 'dash',\n        width: 2\n      }\n    };\n  };\n\n  // Calculate analysis\n  const calculateAnalysis = (data, analysisType) => {\n    if (!data || data.length === 0) return null;\n    const analyses = {\n      'rolling_avg_3h': {\n        window: 3,\n        name: '3-Hour Avg',\n        color: 'violet'\n      },\n      'rolling_avg_6h': {\n        window: 6,\n        name: '6-Hour Avg',\n        color: 'cyan'\n      },\n      'rolling_avg_24h': {\n        window: 24,\n        name: '24-Hour Avg',\n        color: 'magenta'\n      },\n      'all': null\n    };\n    if (analysisType === 'all') {\n      return Object.entries(analyses).filter(([key]) => key !== 'all').map(([key, config]) => calculateAnalysis(data, key)).filter(Boolean);\n    }\n    const config = analyses[analysisType];\n    if (!config) return null;\n    const rollingAvg = [];\n    const windowSize = config.window;\n    for (let i = 0; i < data.length; i++) {\n      const start = Math.max(0, i - windowSize + 1);\n      const window = data.slice(start, i + 1);\n      const validValues = window.map(d => d.Tab_Value_mDepthC1).filter(v => !isNaN(v));\n      const avg = validValues.length > 0 ? validValues.reduce((sum, v) => sum + v, 0) / validValues.length : null;\n      rollingAvg.push(avg);\n    }\n    return {\n      x: data.map(d => d.Tab_DateTime),\n      y: rollingAvg,\n      type: 'scatter',\n      mode: 'lines',\n      name: config.name,\n      line: {\n        color: config.color,\n        width: 2\n      }\n    };\n  };\n\n  // Create plot with preserved zoom/pan\n  const createPlot = () => {\n    var _plotRef$current, _plotRef$current$el, _currentLayout$xaxis, _currentLayout$yaxis;\n    if (!graphData || graphData.length === 0) {\n      return {\n        data: [],\n        layout: {\n          title: 'No Data Available',\n          plot_bgcolor: '#142950',\n          paper_bgcolor: '#142950',\n          font: {\n            color: 'white'\n          },\n          uirevision: 'true'\n        }\n      };\n    }\n    const traces = [];\n    if (filters.dataType === 'tides') {\n      if (graphData.length > 0) {\n        const highTideData = graphData.filter(d => d.HighTide != null && !isNaN(d.HighTide));\n        const lowTideData = graphData.filter(d => d.LowTide != null && !isNaN(d.LowTide));\n        if (highTideData.length > 0) {\n          traces.push({\n            x: highTideData.map(d => d.Date || d.Tab_DateTime),\n            y: highTideData.map(d => d.HighTide),\n            type: 'scatter',\n            mode: 'lines+markers',\n            name: 'High Tide',\n            line: {\n              color: 'deepskyblue',\n              width: 2\n            },\n            marker: {\n              size: 4\n            }\n          });\n        }\n        if (lowTideData.length > 0) {\n          traces.push({\n            x: lowTideData.map(d => d.Date || d.Tab_DateTime),\n            y: lowTideData.map(d => d.LowTide),\n            type: 'scatter',\n            mode: 'lines+markers',\n            name: 'Low Tide',\n            line: {\n              color: 'lightcoral',\n              width: 2\n            },\n            marker: {\n              size: 4\n            }\n          });\n        }\n        if (highTideData.length === 0 && lowTideData.length === 0) {\n          return {\n            data: [],\n            layout: {\n              title: 'No Tidal Data Available',\n              plot_bgcolor: '#142950',\n              paper_bgcolor: '#142950',\n              font: {\n                color: 'white'\n              },\n              annotations: [{\n                text: 'Tidal data not available for selected stations/dates',\n                x: 0.5,\n                y: 0.5,\n                xref: 'paper',\n                yref: 'paper',\n                showarrow: false,\n                font: {\n                  size: 16,\n                  color: 'white'\n                }\n              }],\n              uirevision: 'constant'\n            }\n          };\n        }\n      }\n    } else {\n      if (selectedStations.includes('All Stations')) {\n        const stationGroups = {};\n        graphData.forEach(d => {\n          if (!stationGroups[d.Station]) {\n            stationGroups[d.Station] = [];\n          }\n          stationGroups[d.Station].push(d);\n        });\n        Object.entries(stationGroups).forEach(([station, data]) => {\n          traces.push({\n            x: data.map(d => d.Tab_DateTime),\n            y: data.map(d => d.Tab_Value_mDepthC1),\n            type: 'scatter',\n            mode: 'lines',\n            name: station,\n            line: {\n              width: 2\n            }\n          });\n        });\n      } else {\n        selectedStations.forEach(station => {\n          const stationData = graphData.filter(d => d.Station === station);\n          if (stationData.length > 0) {\n            traces.push({\n              x: stationData.map(d => d.Tab_DateTime),\n              y: stationData.map(d => d.Tab_Value_mDepthC1),\n              type: 'scatter',\n              mode: 'lines',\n              name: station,\n              line: {\n                width: 2\n              }\n            });\n          }\n        });\n      }\n\n      // Add anomalies if enabled\n      if (filters.showAnomalies) {\n        const anomalies = graphData.filter(d => d.anomaly === -1 || d.anomaly === 1);\n        if (anomalies.length > 0) {\n          traces.push({\n            x: anomalies.map(d => d.Tab_DateTime),\n            y: anomalies.map(d => d.Tab_Value_mDepthC1),\n            type: 'scatter',\n            mode: 'markers',\n            name: 'Anomalies',\n            marker: {\n              color: 'red',\n              size: 10,\n              symbol: 'x',\n              line: {\n                color: 'white',\n                width: 1\n              }\n            },\n            showlegend: true\n          });\n        }\n      }\n\n      // Add trendline if selected\n      if (filters.trendline !== 'none') {\n        const trendline = calculateTrendline(graphData, filters.trendline);\n        if (trendline) {\n          traces.push(trendline);\n        }\n      }\n\n      // Add analysis if selected\n      if (filters.analysisType !== 'none') {\n        const analysis = calculateAnalysis(graphData, filters.analysisType);\n        if (analysis) {\n          if (Array.isArray(analysis)) {\n            traces.push(...analysis);\n          } else {\n            traces.push(analysis);\n          }\n        }\n      }\n\n      // Add predictions if available\n      if (predictions.arima && selectedStations.length === 1) {\n        const lastDate = new Date(graphData[graphData.length - 1].Tab_DateTime);\n        const predictionDates = Array.from({\n          length: predictions.arima.length\n        }, (_, i) => {\n          const date = new Date(lastDate);\n          date.setHours(date.getHours() + i + 1);\n          return date.toISOString();\n        });\n        traces.push({\n          x: predictionDates,\n          y: predictions.arima,\n          type: 'scatter',\n          mode: 'lines',\n          name: 'ARIMA Forecast',\n          line: {\n            color: 'lime',\n            dash: 'dot',\n            width: 2\n          }\n        });\n      }\n      if (predictions.prophet && predictions.prophet.length > 0 && selectedStations.length === 1) {\n        traces.push({\n          x: predictions.prophet.map(p => p.ds),\n          y: predictions.prophet.map(p => p.yhat),\n          type: 'scatter',\n          mode: 'lines',\n          name: 'Prophet Forecast',\n          line: {\n            color: 'orange',\n            dash: 'dot',\n            width: 2\n          }\n        });\n      }\n    }\n    const currentLayout = (_plotRef$current = plotRef.current) === null || _plotRef$current === void 0 ? void 0 : (_plotRef$current$el = _plotRef$current.el) === null || _plotRef$current$el === void 0 ? void 0 : _plotRef$current$el.layout;\n    return {\n      data: traces,\n      layout: {\n        title: filters.dataType === 'tides' ? 'Tidal Data' : `Sea Level Monitoring`,\n        plot_bgcolor: '#142950',\n        paper_bgcolor: '#142950',\n        font: {\n          color: 'white'\n        },\n        xaxis: {\n          title: 'Date/Time',\n          color: 'white',\n          gridcolor: '#1e3c72',\n          range: currentLayout === null || currentLayout === void 0 ? void 0 : (_currentLayout$xaxis = currentLayout.xaxis) === null || _currentLayout$xaxis === void 0 ? void 0 : _currentLayout$xaxis.range\n        },\n        yaxis: {\n          title: filters.dataType === 'tides' ? 'Tide Level (m)' : 'Sea Level (m)',\n          color: 'white',\n          gridcolor: '#1e3c72',\n          range: currentLayout === null || currentLayout === void 0 ? void 0 : (_currentLayout$yaxis = currentLayout.yaxis) === null || _currentLayout$yaxis === void 0 ? void 0 : _currentLayout$yaxis.range\n        },\n        margin: {\n          t: 50,\n          r: 20,\n          b: 50,\n          l: 60\n        },\n        height: 400,\n        showlegend: true,\n        legend: {\n          x: 0,\n          y: 1,\n          bgcolor: 'rgba(20, 41, 80, 0.8)',\n          bordercolor: '#2a4a8c',\n          borderwidth: 1\n        },\n        uirevision: 'constant'\n      }\n    };\n  };\n\n  // Export functions\n  const exportGraph = () => {\n    const plotElement = document.querySelector('.js-plotly-plot');\n    if (plotElement) {\n      window.Plotly.downloadImage(plotElement, {\n        format: 'png',\n        width: 1200,\n        height: 600,\n        filename: `sea_level_graph_${selectedStations.join('_')}_${new Date().toISOString().split('T')[0]}`\n      });\n    }\n  };\n  const exportTable = () => {\n    if (tableData.length === 0) {\n      alert('No data to export');\n      return;\n    }\n    const headers = Object.keys(tableData[0]);\n    const csvContent = [headers.join(','), ...tableData.map(row => headers.map(header => {\n      const value = row[header];\n      return typeof value === 'string' && value.includes(',') ? `\"${value}\"` : value;\n    }).join(','))].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `sea_level_data_${selectedStations.join('_')}_${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  // Map component\n  const MapView = () => {\n    if (mapTab === 'govmap') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '500px',\n          border: '1px solid #2a4a8c',\n          borderRadius: '8px',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `${API_BASE_URL}/mapframe`,\n          style: {\n            width: '100%',\n            height: '100%',\n            border: 'none'\n          },\n          title: \"GovMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(OSMMap, {\n        stations: stations.filter(s => s !== 'All Stations'),\n        currentStation: selectedStations[0],\n        mapData: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"navbar-brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/Mapi_Logo2.png\",\n          alt: \"Mapi Logo\",\n          style: {\n            height: '40px',\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), \"Sea Level Monitoring Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"current-time\",\n        children: currentTime.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"filters-card\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-3\",\n                children: \"Filters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Date Range\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: filters.startDate,\n                  onChange: e => handleFilterChange('startDate', e.target.value),\n                  className: \"mb-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: filters.endDate,\n                  onChange: e => handleFilterChange('endDate', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: [\"Stations (\", selectedStations.length, \"/3)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 19\n                }, this), stations.map(station => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: station,\n                  checked: selectedStations.includes(station),\n                  onChange: () => handleStationChange(station),\n                  disabled: !selectedStations.includes(station) && selectedStations.length >= 3 && station !== 'All Stations'\n                }, station, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: \"Select up to 3 stations or \\\"All Stations\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Data Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: filters.dataType,\n                  onChange: e => handleFilterChange('dataType', e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"default\",\n                    children: \"Default\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"tides\",\n                    children: \"Tidal Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Trendline Period\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: filters.trendline,\n                  onChange: e => handleFilterChange('trendline', e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"none\",\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"7d\",\n                    children: \"7 Days\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"30d\",\n                    children: \"30 Days\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"90d\",\n                    children: \"90 Days\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1y\",\n                    children: \"1 Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"last_decade\",\n                    children: \"Last Decade\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"last_two_decades\",\n                    children: \"Last Two Decades\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"all\",\n                    children: \"All Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Analysis Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: filters.analysisType,\n                  onChange: e => handleFilterChange('analysisType', e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"none\",\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rolling_avg_3h\",\n                    children: \"3-Hour Average\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rolling_avg_6h\",\n                    children: \"6-Hour Average\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rolling_avg_24h\",\n                    children: \"24-Hour Average\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"all\",\n                    children: \"All Analyses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Show Anomalies\",\n                  checked: filters.showAnomalies,\n                  onChange: e => handleFilterChange('showAnomalies', e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Prediction Models\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"ARIMA\",\n                  checked: filters.predictionModels.includes('arima'),\n                  onChange: e => {\n                    const models = e.target.checked ? [...filters.predictionModels, 'arima'] : filters.predictionModels.filter(m => m !== 'arima');\n                    handleFilterChange('predictionModels', models);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Prophet\",\n                  checked: filters.predictionModels.includes('prophet'),\n                  onChange: e => {\n                    const models = e.target.checked ? [...filters.predictionModels, 'prophet'] : filters.predictionModels.filter(m => m !== 'prophet');\n                    handleFilterChange('predictionModels', models);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline-primary btn-sm w-100\",\n                    onClick: exportGraph,\n                    children: \"Export Graph\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 796,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline-primary btn-sm w-100\",\n                    onClick: exportTable,\n                    children: \"Export Table\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"stat-card\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"text-center p-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-label\",\n                    children: \"Current Level\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-value\",\n                    children: [stats.current_level.toFixed(3), \"m\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: `stat-card ${stats['24h_change'] >= 0 ? 'green' : 'red'}`,\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"text-center p-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-label\",\n                    children: \"24h Change\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-value\",\n                    children: [stats['24h_change'] >= 0 ? '+' : '', stats['24h_change'].toFixed(3), \"m\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 832,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"stat-card\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"text-center p-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-label\",\n                    children: \"Avg. Temp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-value\",\n                    children: [stats.avg_temp.toFixed(1), \"\\xB0C\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"stat-card\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"text-center p-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-label\",\n                    children: \"Anomalies\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-value\",\n                    children: stats.anomalies\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 850,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                activeKey: activeTab,\n                onSelect: setActiveTab,\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"graph\",\n                  title: \"Graph View\",\n                  children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center p-5\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"spinner-border text-primary\",\n                      role: \"status\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"visually-hidden\",\n                        children: \"Loading...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 864,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 863,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 862,\n                    columnNumber: 23\n                  }, this) : graphData.length > 0 ? /*#__PURE__*/_jsxDEV(Plot, {\n                    ref: plotRef,\n                    data: createPlot().data,\n                    layout: createPlot().layout,\n                    config: {\n                      responsive: true\n                    },\n                    style: {\n                      width: '100%',\n                      height: '400px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center p-5\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"No data to display. Select a station to view data.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 877,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 876,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"table\",\n                  title: \"Table View\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      overflowX: 'auto',\n                      maxHeight: '400px'\n                    },\n                    children: tableData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                        className: \"table table-dark table-striped\",\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Date/Time\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 889,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Station\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 890,\n                              columnNumber: 33\n                            }, this), filters.dataType === 'tides' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"High Tide (m)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 893,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"High Tide Time\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 894,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"High Tide Temp (\\xB0C)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 895,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"Low Tide (m)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 896,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"Low Tide Time\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 897,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"Low Tide Temp (\\xB0C)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 898,\n                                columnNumber: 37\n                              }, this)]\n                            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"Sea Level (m)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 902,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"Temperature (\\xB0C)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 903,\n                                columnNumber: 37\n                              }, this)]\n                            }, void 0, true), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Anomaly\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 906,\n                              columnNumber: 33\n                            }, this), filters.trendline !== 'none' && /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Trendline Value\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 907,\n                              columnNumber: 66\n                            }, this), filters.analysisType !== 'none' && /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Analysis Value\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 908,\n                              columnNumber: 69\n                            }, this), filters.predictionModels.includes('arima') && /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"ARIMA Prediction\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 909,\n                              columnNumber: 80\n                            }, this), filters.predictionModels.includes('prophet') && /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Prophet Prediction\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 910,\n                              columnNumber: 82\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 888,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 887,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: tableData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((row, idx) => {\n                            var _row$HighTide, _row$HighTideTemp, _row$LowTide, _row$LowTideTemp, _row$Tab_Value_mDepth, _row$Tab_Value_monT2m, _predictions$prophet$;\n                            return /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                children: filters.dataType === 'tides' ? row.Date : new Date(row.Tab_DateTime).toLocaleString()\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 918,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: row.Station\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 919,\n                                columnNumber: 35\n                              }, this), filters.dataType === 'tides' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                  children: ((_row$HighTide = row.HighTide) === null || _row$HighTide === void 0 ? void 0 : _row$HighTide.toFixed(3)) || 'N/A'\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 922,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                  children: row.HighTideTime || 'N/A'\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 923,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                  children: ((_row$HighTideTemp = row.HighTideTemp) === null || _row$HighTideTemp === void 0 ? void 0 : _row$HighTideTemp.toFixed(1)) || 'N/A'\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 924,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                  children: ((_row$LowTide = row.LowTide) === null || _row$LowTide === void 0 ? void 0 : _row$LowTide.toFixed(3)) || 'N/A'\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 925,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                  children: row.LowTideTime || 'N/A'\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 926,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                  children: ((_row$LowTideTemp = row.LowTideTemp) === null || _row$LowTideTemp === void 0 ? void 0 : _row$LowTideTemp.toFixed(1)) || 'N/A'\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 927,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                  children: ((_row$Tab_Value_mDepth = row.Tab_Value_mDepthC1) === null || _row$Tab_Value_mDepth === void 0 ? void 0 : _row$Tab_Value_mDepth.toFixed(3)) || 'N/A'\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 931,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                  children: ((_row$Tab_Value_monT2m = row.Tab_Value_monT2m) === null || _row$Tab_Value_monT2m === void 0 ? void 0 : _row$Tab_Value_monT2m.toFixed(1)) || 'N/A'\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 932,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: row.anomaly || 0\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 935,\n                                columnNumber: 35\n                              }, this), filters.trendline !== 'none' && /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: typeof row.trendlineValue === 'number' ? row.trendlineValue.toFixed(3) : row.trendlineValue\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 936,\n                                columnNumber: 68\n                              }, this), filters.analysisType !== 'none' && /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: typeof row.analysisValue === 'number' ? row.analysisValue.toFixed(3) : row.analysisValue\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 937,\n                                columnNumber: 71\n                              }, this), filters.predictionModels.includes('arima') && /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: predictions.arima && predictions.arima[idx] ? predictions.arima[idx].toFixed(3) : 'N/A'\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 938,\n                                columnNumber: 82\n                              }, this), filters.predictionModels.includes('prophet') && /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: predictions.prophet && predictions.prophet[idx] ? ((_predictions$prophet$ = predictions.prophet[idx].yhat) === null || _predictions$prophet$ === void 0 ? void 0 : _predictions$prophet$.toFixed(3)) || predictions.prophet[idx].toFixed(3) : 'N/A'\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 939,\n                                columnNumber: 84\n                              }, this)]\n                            }, idx, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 917,\n                              columnNumber: 33\n                            }, this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 913,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 886,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex justify-content-between align-items-center mt-3\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-muted\",\n                          children: [\"Showing \", (currentPage - 1) * itemsPerPage + 1, \" to \", Math.min(currentPage * itemsPerPage, tableData.length), \" of \", tableData.length, \" entries\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 945,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-outline-primary btn-sm me-2\",\n                            onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n                            disabled: currentPage === 1,\n                            children: \"Previous\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 949,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"mx-2\",\n                            children: [\"Page \", currentPage, \" of \", Math.ceil(tableData.length / itemsPerPage)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 956,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-outline-primary btn-sm ms-2\",\n                            onClick: () => setCurrentPage(prev => Math.min(prev + 1, Math.ceil(tableData.length / itemsPerPage))),\n                            disabled: currentPage === Math.ceil(tableData.length / itemsPerPage),\n                            children: \"Next\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 957,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 948,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 944,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-center\",\n                      children: \"No data to display\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 968,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 883,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 882,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"map\",\n                  title: \"Map View\",\n                  children: /*#__PURE__*/_jsxDEV(Tabs, {\n                    activeKey: mapTab,\n                    onSelect: setMapTab,\n                    className: \"mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Tab, {\n                      eventKey: \"osm\",\n                      title: \"OpenStreetMap\",\n                      children: /*#__PURE__*/_jsxDEV(MapView, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 976,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 975,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                      eventKey: \"govmap\",\n                      title: \"GovMap\",\n                      children: /*#__PURE__*/_jsxDEV(MapView, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 979,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 978,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 668,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JSsdxMe4TL0IwvSbWVKhebsV1ds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Container","Row","Col","Card","Form","Tabs","Tab","Plot","OSMMap","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","App","_s","currentTime","setCurrentTime","Date","activeTab","setActiveTab","mapTab","setMapTab","stations","setStations","loading","setLoading","graphData","setGraphData","tableData","setTableData","predictions","setPredictions","arima","prophet","selectedStations","setSelectedStations","currentPage","setCurrentPage","itemsPerPage","plotRef","stats","setStats","current_level","avg_temp","anomalies","filters","setFilters","startDate","now","toISOString","split","endDate","dataType","trendline","analysisType","showAnomalies","predictionModels","timer","setInterval","clearInterval","fetchStations","response","fetch","ok","data","json","error","console","calculateStats","length","currentLevel","change24h","avgTemp","anomalyCount","includes","stationGroups","forEach","d","Station","push","stationCount","Object","values","stationData","levels","map","Tab_Value_mDepthC1","filter","v","isNaN","temps","Tab_Value_monT2m","reduce","a","b","anomaly","fetchPredictions","station","params","URLSearchParams","model","join","fetchData","allData","stationList","s","start_date","end_date","data_source","show_anomalies","toString","Array","isArray","concat","err","slice","enrichedData","row","index","enriched","_trendlineData$y","trendlineData","calculateTrendline","trendlineValue","y","analysisData","calculateAnalysis","_analysisData$","_analysisData$$y","analysisValue","_analysisData$y","sortedData","sort","Tab_DateTime","timeoutId","setTimeout","clearTimeout","handleStationChange","value","prev","handleFilterChange","key","period","periodDays","days","filteredData","n","xValues","_","i","yValues","sumX","sumY","sumXY","sum","x","sumXX","slope","intercept","type","mode","name","line","color","dash","width","analyses","window","entries","config","Boolean","rollingAvg","windowSize","start","Math","max","validValues","avg","createPlot","_plotRef$current","_plotRef$current$el","_currentLayout$xaxis","_currentLayout$yaxis","layout","title","plot_bgcolor","paper_bgcolor","font","uirevision","traces","highTideData","HighTide","lowTideData","LowTide","marker","size","annotations","text","xref","yref","showarrow","symbol","showlegend","analysis","lastDate","predictionDates","from","date","setHours","getHours","p","ds","yhat","currentLayout","current","el","xaxis","gridcolor","range","yaxis","margin","t","r","l","height","legend","bgcolor","bordercolor","borderwidth","exportGraph","plotElement","document","querySelector","Plotly","downloadImage","format","filename","exportTable","alert","headers","keys","csvContent","header","blob","Blob","url","URL","createObjectURL","createElement","href","download","click","revokeObjectURL","MapView","style","border","borderRadius","overflow","children","src","fileName","_jsxFileName","lineNumber","columnNumber","currentStation","mapData","className","alt","marginRight","id","toLocaleString","fluid","md","Body","Group","Label","Control","onChange","e","target","Check","label","checked","disabled","Select","models","m","onClick","toFixed","activeKey","onSelect","eventKey","role","ref","responsive","overflowX","maxHeight","idx","_row$HighTide","_row$HighTideTemp","_row$LowTide","_row$LowTideTemp","_row$Tab_Value_mDepth","_row$Tab_Value_monT2m","_predictions$prophet$","HighTideTime","HighTideTemp","LowTideTime","LowTideTemp","min","ceil","_c","$RefreshReg$"],"sources":["C:/Users/user01/Desktop/Ben/Sea_Level_Dash/Sea_Level_Dash_app/ScriptVersions/Sea_Level_Dashboard_Aws Ver_04_08_25/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js - Fixed version with all bug fixes\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Container, Row, Col, Card, Form, Tabs, Tab } from 'react-bootstrap';\nimport Plot from 'react-plotly.js';\nimport OSMMap from './components/OSMMap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [activeTab, setActiveTab] = useState('graph');\n  const [mapTab, setMapTab] = useState('osm');\n  const [stations, setStations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [graphData, setGraphData] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [predictions, setPredictions] = useState({ arima: null, prophet: null });\n  const [selectedStations, setSelectedStations] = useState(['All Stations']);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(50);\n  const plotRef = useRef(null);\n  \n  // Initialize stats\n  const [stats, setStats] = useState({\n    current_level: 0,\n    '24h_change': 0,\n    avg_temp: 0,\n    anomalies: 0\n  });\n\n  // Filter states - Fixed date picker to use full day ranges\n  const [filters, setFilters] = useState({\n    startDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    endDate: new Date().toISOString().split('T')[0],\n    dataType: 'default',\n    trendline: 'none',\n    analysisType: 'none',\n    showAnomalies: false,\n    predictionModels: []\n  });\n\n  // Update current time every second\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Fetch stations on mount\n  useEffect(() => {\n    fetchStations();\n  }, []);\n\n  const fetchStations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/stations`);\n      if (response.ok) {\n        const data = await response.json();\n        setStations(data.stations || []);\n      }\n    } catch (error) {\n      console.error('Error fetching stations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate stats from data\n  const calculateStats = useCallback((data) => {\n    if (!data || data.length === 0) return;\n\n    let currentLevel = 0;\n    let change24h = 0;\n    let avgTemp = 0;\n    let anomalyCount = 0;\n\n    if (selectedStations.includes('All Stations') || selectedStations.length > 1) {\n      const stationGroups = {};\n      data.forEach(d => {\n        if (!stationGroups[d.Station]) {\n          stationGroups[d.Station] = [];\n        }\n        stationGroups[d.Station].push(d);\n      });\n\n      let stationCount = 0;\n      Object.values(stationGroups).forEach(stationData => {\n        if (stationData.length > 0) {\n          stationCount++;\n          const levels = stationData.map(d => d.Tab_Value_mDepthC1).filter(v => !isNaN(v));\n          const temps = stationData.map(d => d.Tab_Value_monT2m).filter(v => !isNaN(v));\n          \n          if (levels.length > 0) {\n            currentLevel += levels[levels.length - 1];\n            if (levels.length > 1) {\n              change24h += levels[levels.length - 1] - levels[0];\n            }\n          }\n          if (temps.length > 0) {\n            avgTemp += temps.reduce((a, b) => a + b, 0) / temps.length;\n          }\n          anomalyCount += stationData.filter(d => d.anomaly === -1).length;\n        }\n      });\n\n      if (stationCount > 0) {\n        currentLevel /= stationCount;\n        change24h /= stationCount;\n        avgTemp /= stationCount;\n      }\n    } else {\n      const levels = data.map(d => d.Tab_Value_mDepthC1).filter(v => !isNaN(v));\n      const temps = data.map(d => d.Tab_Value_monT2m).filter(v => !isNaN(v));\n      \n      if (levels.length > 0) {\n        currentLevel = levels[levels.length - 1];\n        if (levels.length > 1) {\n          change24h = levels[levels.length - 1] - levels[0];\n        }\n      }\n      if (temps.length > 0) {\n        avgTemp = temps.reduce((a, b) => a + b, 0) / temps.length;\n      }\n      anomalyCount = data.filter(d => d.anomaly === -1).length;\n    }\n\n    setStats({\n      current_level: currentLevel,\n      '24h_change': change24h,\n      avg_temp: avgTemp,\n      anomalies: anomalyCount\n    });\n  }, [selectedStations]);\n\n  // Fetch predictions - STABLE VERSION\n  const fetchPredictions = useCallback(async (station) => {\n    if (filters.predictionModels.length === 0) {\n      setPredictions({ arima: null, prophet: null });\n      return;\n    }\n\n    try {\n      const params = new URLSearchParams({\n        station: station,\n        model: filters.predictionModels.join(',')\n      });\n\n      const response = await fetch(`${API_BASE_URL}/predictions?${params}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPredictions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching predictions:', error);\n      setPredictions({ arima: null, prophet: null });\n    }\n  }, [filters.predictionModels]);\n\n  // Fetch data - FIXED VERSION to prevent infinite loops\n  const fetchData = useCallback(async () => {\n    if (stations.length === 0 || selectedStations.length === 0) return;\n    \n    setLoading(true);\n    try {\n      let allData = [];\n\n      if (selectedStations.includes('All Stations')) {\n        const stationList = stations.filter(s => s !== 'All Stations');\n        \n        for (const station of stationList) {\n          const params = new URLSearchParams({\n            station: station,\n            start_date: filters.startDate,\n            end_date: filters.endDate,\n            data_source: filters.dataType,\n            show_anomalies: filters.showAnomalies.toString()\n          });\n\n          try {\n            const response = await fetch(`${API_BASE_URL}/data?${params}`);\n            if (response.ok) {\n              const data = await response.json();\n              if (Array.isArray(data)) {\n                allData = allData.concat(data);\n              }\n            }\n          } catch (err) {\n            console.error(`Error fetching data for ${station}:`, err);\n          }\n        }\n      } else {\n        for (const station of selectedStations.filter(s => s !== 'All Stations').slice(0, 3)) {\n          const params = new URLSearchParams({\n            station: station,\n            start_date: filters.startDate,\n            end_date: filters.endDate,\n            data_source: filters.dataType,\n            show_anomalies: filters.showAnomalies.toString()\n          });\n\n          try {\n            const response = await fetch(`${API_BASE_URL}/data?${params}`);\n            if (response.ok) {\n              const data = await response.json();\n              if (Array.isArray(data)) {\n                allData = allData.concat(data);\n              }\n            }\n          } catch (err) {\n            console.error(`Error fetching data for ${station}:`, err);\n          }\n        }\n      }\n\n      if (Array.isArray(allData) && allData.length > 0) {\n        setGraphData(allData);\n        \n        // For table view, add calculated values\n        const enrichedData = allData.map((row, index) => {\n          const enriched = { ...row };\n          \n          // Add trendline value if selected\n          if (filters.trendline !== 'none' && allData.length > 1) {\n            const trendlineData = calculateTrendline(allData, filters.trendline);\n            enriched.trendlineValue = trendlineData?.y?.[index] || 'N/A';\n          }\n          \n          // Add analysis value if selected\n          if (filters.analysisType !== 'none' && allData.length > 1) {\n            const analysisData = calculateAnalysis(allData, filters.analysisType);\n            if (Array.isArray(analysisData)) {\n              enriched.analysisValue = analysisData[0]?.y?.[index] || 'N/A';\n            } else {\n              enriched.analysisValue = analysisData?.y?.[index] || 'N/A';\n            }\n          }\n          \n          return enriched;\n        });\n        \n        const sortedData = enrichedData.sort((a, b) => new Date(a.Tab_DateTime || a.Date) - new Date(b.Tab_DateTime || b.Date));\n        setTableData(sortedData);\n        setCurrentPage(1);\n\n        calculateStats(allData);\n      } else {\n        setGraphData([]);\n        setTableData([]);\n        setStats({ current_level: 0, '24h_change': 0, avg_temp: 0, anomalies: 0 });\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [filters.startDate, filters.endDate, filters.dataType, filters.showAnomalies, filters.trendline, filters.analysisType, selectedStations, stations, calculateStats]);\n\n  // AUTO-UPDATE: Fetch data when filters or stations change - FIXED\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      fetchData();\n    }, 300); // Debounce data fetching\n    \n    return () => clearTimeout(timeoutId);\n  }, [filters.startDate, filters.endDate, filters.dataType, filters.showAnomalies, selectedStations]);\n\n  // SEPARATE EFFECT: Handle predictions to prevent infinite loops\n  useEffect(() => {\n    if (filters.predictionModels.length > 0 && selectedStations.length === 1 && !selectedStations.includes('All Stations') && graphData.length > 0) {\n      fetchPredictions(selectedStations[0]);\n    } else {\n      setPredictions({ arima: null, prophet: null });\n    }\n  }, [filters.predictionModels, selectedStations, fetchPredictions, graphData.length]);\n\n  // Handle station selection (support multi-select up to 3)\n  const handleStationChange = (value) => {\n    if (value === 'All Stations') {\n      setSelectedStations(['All Stations']);\n    } else {\n      setSelectedStations(prev => {\n        if (prev.includes(value)) {\n          return prev.filter(s => s !== value);\n        } else if (prev.length < 3 && !prev.includes('All Stations')) {\n          return [...prev, value];\n        } else {\n          return [value];\n        }\n      });\n    }\n  };\n\n  // Handle filter changes - data will auto-update via useEffect\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Calculate trendline\n  const calculateTrendline = (data, period) => {\n    if (!data || data.length < 2) return null;\n\n    const periodDays = {\n      '7d': 7,\n      '30d': 30,\n      '90d': 90,\n      '1y': 365,\n      'last_decade': 3650,\n      'last_two_decades': 7300,\n      'all': null\n    };\n\n    const days = periodDays[period];\n    let filteredData = data;\n\n    if (days !== null) {\n      const endDate = new Date(data[data.length - 1].Tab_DateTime);\n      const startDate = new Date(endDate - days * 24 * 60 * 60 * 1000);\n      filteredData = data.filter(d => new Date(d.Tab_DateTime) >= startDate);\n    }\n    \n    if (filteredData.length < 2) return null;\n\n    const n = filteredData.length;\n    const xValues = filteredData.map((_, i) => i);\n    const yValues = filteredData.map(d => d.Tab_Value_mDepthC1);\n    \n    const sumX = xValues.reduce((a, b) => a + b, 0);\n    const sumY = yValues.reduce((a, b) => a + b, 0);\n    const sumXY = xValues.reduce((sum, x, i) => sum + x * yValues[i], 0);\n    const sumXX = xValues.reduce((sum, x) => sum + x * x, 0);\n    \n    const slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);\n    const intercept = (sumY - slope * sumX) / n;\n    \n    return {\n      x: filteredData.map(d => d.Tab_DateTime),\n      y: xValues.map(x => slope * x + intercept),\n      type: 'scatter',\n      mode: 'lines',\n      name: `Trendline (${period})`,\n      line: { color: 'yellow', dash: 'dash', width: 2 }\n    };\n  };\n\n  // Calculate analysis\n  const calculateAnalysis = (data, analysisType) => {\n    if (!data || data.length === 0) return null;\n\n    const analyses = {\n      'rolling_avg_3h': { window: 3, name: '3-Hour Avg', color: 'violet' },\n      'rolling_avg_6h': { window: 6, name: '6-Hour Avg', color: 'cyan' },\n      'rolling_avg_24h': { window: 24, name: '24-Hour Avg', color: 'magenta' },\n      'all': null\n    };\n\n    if (analysisType === 'all') {\n      return Object.entries(analyses)\n        .filter(([key]) => key !== 'all')\n        .map(([key, config]) => calculateAnalysis(data, key))\n        .filter(Boolean);\n    }\n\n    const config = analyses[analysisType];\n    if (!config) return null;\n\n    const rollingAvg = [];\n    const windowSize = config.window;\n    \n    for (let i = 0; i < data.length; i++) {\n      const start = Math.max(0, i - windowSize + 1);\n      const window = data.slice(start, i + 1);\n      const validValues = window.map(d => d.Tab_Value_mDepthC1).filter(v => !isNaN(v));\n      const avg = validValues.length > 0 \n        ? validValues.reduce((sum, v) => sum + v, 0) / validValues.length \n        : null;\n      rollingAvg.push(avg);\n    }\n    \n    return {\n      x: data.map(d => d.Tab_DateTime),\n      y: rollingAvg,\n      type: 'scatter',\n      mode: 'lines',\n      name: config.name,\n      line: { color: config.color, width: 2 }\n    };\n  };\n\n  // Create plot with preserved zoom/pan\n  const createPlot = () => {\n    if (!graphData || graphData.length === 0) {\n      return {\n        data: [],\n        layout: {\n          title: 'No Data Available',\n          plot_bgcolor: '#142950',\n          paper_bgcolor: '#142950',\n          font: { color: 'white' },\n          uirevision: 'true'\n        }\n      };\n    }\n\n    const traces = [];\n\n    if (filters.dataType === 'tides') {\n      if (graphData.length > 0) {\n        const highTideData = graphData.filter(d => d.HighTide != null && !isNaN(d.HighTide));\n        const lowTideData = graphData.filter(d => d.LowTide != null && !isNaN(d.LowTide));\n        \n        if (highTideData.length > 0) {\n          traces.push({\n            x: highTideData.map(d => d.Date || d.Tab_DateTime),\n            y: highTideData.map(d => d.HighTide),\n            type: 'scatter',\n            mode: 'lines+markers',\n            name: 'High Tide',\n            line: { color: 'deepskyblue', width: 2 },\n            marker: { size: 4 }\n          });\n        }\n        \n        if (lowTideData.length > 0) {\n          traces.push({\n            x: lowTideData.map(d => d.Date || d.Tab_DateTime),\n            y: lowTideData.map(d => d.LowTide),\n            type: 'scatter',\n            mode: 'lines+markers',\n            name: 'Low Tide',\n            line: { color: 'lightcoral', width: 2 },\n            marker: { size: 4 }\n          });\n        }\n        \n        if (highTideData.length === 0 && lowTideData.length === 0) {\n          return {\n            data: [],\n            layout: {\n              title: 'No Tidal Data Available',\n              plot_bgcolor: '#142950',\n              paper_bgcolor: '#142950',\n              font: { color: 'white' },\n              annotations: [{\n                text: 'Tidal data not available for selected stations/dates',\n                x: 0.5,\n                y: 0.5,\n                xref: 'paper',\n                yref: 'paper',\n                showarrow: false,\n                font: { size: 16, color: 'white' }\n              }],\n              uirevision: 'constant'\n            }\n          };\n        }\n      }\n    } else {\n      if (selectedStations.includes('All Stations')) {\n        const stationGroups = {};\n        graphData.forEach(d => {\n          if (!stationGroups[d.Station]) {\n            stationGroups[d.Station] = [];\n          }\n          stationGroups[d.Station].push(d);\n        });\n\n        Object.entries(stationGroups).forEach(([station, data]) => {\n          traces.push({\n            x: data.map(d => d.Tab_DateTime),\n            y: data.map(d => d.Tab_Value_mDepthC1),\n            type: 'scatter',\n            mode: 'lines',\n            name: station,\n            line: { width: 2 }\n          });\n        });\n      } else {\n        selectedStations.forEach(station => {\n          const stationData = graphData.filter(d => d.Station === station);\n          if (stationData.length > 0) {\n            traces.push({\n              x: stationData.map(d => d.Tab_DateTime),\n              y: stationData.map(d => d.Tab_Value_mDepthC1),\n              type: 'scatter',\n              mode: 'lines',\n              name: station,\n              line: { width: 2 }\n            });\n          }\n        });\n      }\n\n      // Add anomalies if enabled\n      if (filters.showAnomalies) {\n        const anomalies = graphData.filter(d => d.anomaly === -1 || d.anomaly === 1);\n        if (anomalies.length > 0) {\n          traces.push({\n            x: anomalies.map(d => d.Tab_DateTime),\n            y: anomalies.map(d => d.Tab_Value_mDepthC1),\n            type: 'scatter',\n            mode: 'markers',\n            name: 'Anomalies',\n            marker: { \n              color: 'red', \n              size: 10, \n              symbol: 'x',\n              line: { color: 'white', width: 1 }\n            },\n            showlegend: true\n          });\n        }\n      }\n\n      // Add trendline if selected\n      if (filters.trendline !== 'none') {\n        const trendline = calculateTrendline(graphData, filters.trendline);\n        if (trendline) {\n          traces.push(trendline);\n        }\n      }\n\n      // Add analysis if selected\n      if (filters.analysisType !== 'none') {\n        const analysis = calculateAnalysis(graphData, filters.analysisType);\n        if (analysis) {\n          if (Array.isArray(analysis)) {\n            traces.push(...analysis);\n          } else {\n            traces.push(analysis);\n          }\n        }\n      }\n\n      // Add predictions if available\n      if (predictions.arima && selectedStations.length === 1) {\n        const lastDate = new Date(graphData[graphData.length - 1].Tab_DateTime);\n        const predictionDates = Array.from({ length: predictions.arima.length }, (_, i) => {\n          const date = new Date(lastDate);\n          date.setHours(date.getHours() + i + 1);\n          return date.toISOString();\n        });\n\n        traces.push({\n          x: predictionDates,\n          y: predictions.arima,\n          type: 'scatter',\n          mode: 'lines',\n          name: 'ARIMA Forecast',\n          line: { color: 'lime', dash: 'dot', width: 2 }\n        });\n      }\n\n      if (predictions.prophet && predictions.prophet.length > 0 && selectedStations.length === 1) {\n        traces.push({\n          x: predictions.prophet.map(p => p.ds),\n          y: predictions.prophet.map(p => p.yhat),\n          type: 'scatter',\n          mode: 'lines',\n          name: 'Prophet Forecast',\n          line: { color: 'orange', dash: 'dot', width: 2 }\n        });\n      }\n    }\n\n    const currentLayout = plotRef.current?.el?.layout;\n    \n    return {\n      data: traces,\n      layout: {\n        title: filters.dataType === 'tides' ? 'Tidal Data' : `Sea Level Monitoring`,\n        plot_bgcolor: '#142950',\n        paper_bgcolor: '#142950',\n        font: { color: 'white' },\n        xaxis: { \n          title: 'Date/Time', \n          color: 'white', \n          gridcolor: '#1e3c72',\n          range: currentLayout?.xaxis?.range\n        },\n        yaxis: { \n          title: filters.dataType === 'tides' ? 'Tide Level (m)' : 'Sea Level (m)', \n          color: 'white', \n          gridcolor: '#1e3c72',\n          range: currentLayout?.yaxis?.range\n        },\n        margin: { t: 50, r: 20, b: 50, l: 60 },\n        height: 400,\n        showlegend: true,\n        legend: {\n          x: 0,\n          y: 1,\n          bgcolor: 'rgba(20, 41, 80, 0.8)',\n          bordercolor: '#2a4a8c',\n          borderwidth: 1\n        },\n        uirevision: 'constant'\n      }\n    };\n  };\n\n  // Export functions\n  const exportGraph = () => {\n    const plotElement = document.querySelector('.js-plotly-plot');\n    if (plotElement) {\n      window.Plotly.downloadImage(plotElement, {\n        format: 'png',\n        width: 1200,\n        height: 600,\n        filename: `sea_level_graph_${selectedStations.join('_')}_${new Date().toISOString().split('T')[0]}`\n      });\n    }\n  };\n\n  const exportTable = () => {\n    if (tableData.length === 0) {\n      alert('No data to export');\n      return;\n    }\n\n    const headers = Object.keys(tableData[0]);\n    const csvContent = [\n      headers.join(','),\n      ...tableData.map(row => \n        headers.map(header => {\n          const value = row[header];\n          return typeof value === 'string' && value.includes(',') \n            ? `\"${value}\"` \n            : value;\n        }).join(',')\n      )\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `sea_level_data_${selectedStations.join('_')}_${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  // Map component\n  const MapView = () => {\n    if (mapTab === 'govmap') {\n      return (\n        <div style={{ width: '100%', height: '500px', border: '1px solid #2a4a8c', borderRadius: '8px', overflow: 'hidden' }}>\n          <iframe\n            src={`${API_BASE_URL}/mapframe`}\n            style={{ width: '100%', height: '100%', border: 'none' }}\n            title=\"GovMap\"\n          />\n        </div>\n      );\n    } else {\n      return (\n        <OSMMap \n          stations={stations.filter(s => s !== 'All Stations')}\n          currentStation={selectedStations[0]}\n          mapData={graphData}\n        />\n      );\n    }\n  };\n\n  return (\n    <div className=\"dash-container\">\n      {/* Header */}\n      <div className=\"header\">\n        <h1 className=\"navbar-brand\">\n          <img src=\"/assets/Mapi_Logo2.png\" alt=\"Mapi Logo\" style={{height: '40px', marginRight: '10px'}} />\n          Sea Level Monitoring Dashboard\n        </h1>\n        <div id=\"current-time\">{currentTime.toLocaleString()}</div>\n      </div>\n\n      {/* Main Content */}\n      <Container fluid className=\"p-3\">\n        <Row>\n          {/* Filters Column */}\n          <Col md={3}>\n            <Card className=\"filters-card\">\n              <Card.Body>\n                <h5 className=\"mb-3\">Filters</h5>\n                \n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Date Range</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    value={filters.startDate}\n                    onChange={(e) => handleFilterChange('startDate', e.target.value)}\n                    className=\"mb-2\"\n                  />\n                  <Form.Control\n                    type=\"date\"\n                    value={filters.endDate}\n                    onChange={(e) => handleFilterChange('endDate', e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Stations ({selectedStations.length}/3)</Form.Label>\n                  {stations.map(station => (\n                    <Form.Check\n                      key={station}\n                      type=\"checkbox\"\n                      label={station}\n                      checked={selectedStations.includes(station)}\n                      onChange={() => handleStationChange(station)}\n                      disabled={!selectedStations.includes(station) && selectedStations.length >= 3 && station !== 'All Stations'}\n                    />\n                  ))}\n                  <small className=\"text-muted\">Select up to 3 stations or \"All Stations\"</small>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Data Type</Form.Label>\n                  <Form.Select\n                    value={filters.dataType}\n                    onChange={(e) => handleFilterChange('dataType', e.target.value)}\n                  >\n                    <option value=\"default\">Default</option>\n                    <option value=\"tides\">Tidal Data</option>\n                  </Form.Select>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Trendline Period</Form.Label>\n                  <Form.Select\n                    value={filters.trendline}\n                    onChange={(e) => handleFilterChange('trendline', e.target.value)}\n                  >\n                    <option value=\"none\">None</option>\n                    <option value=\"7d\">7 Days</option>\n                    <option value=\"30d\">30 Days</option>\n                    <option value=\"90d\">90 Days</option>\n                    <option value=\"1y\">1 Year</option>\n                    <option value=\"last_decade\">Last Decade</option>\n                    <option value=\"last_two_decades\">Last Two Decades</option>\n                    <option value=\"all\">All Time</option>\n                  </Form.Select>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Analysis Type</Form.Label>\n                  <Form.Select\n                    value={filters.analysisType}\n                    onChange={(e) => handleFilterChange('analysisType', e.target.value)}\n                  >\n                    <option value=\"none\">None</option>\n                    <option value=\"rolling_avg_3h\">3-Hour Average</option>\n                    <option value=\"rolling_avg_6h\">6-Hour Average</option>\n                    <option value=\"rolling_avg_24h\">24-Hour Average</option>\n                    <option value=\"all\">All Analyses</option>\n                  </Form.Select>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Show Anomalies\"\n                    checked={filters.showAnomalies}\n                    onChange={(e) => handleFilterChange('showAnomalies', e.target.checked)}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Prediction Models</Form.Label>\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"ARIMA\"\n                    checked={filters.predictionModels.includes('arima')}\n                    onChange={(e) => {\n                      const models = e.target.checked \n                        ? [...filters.predictionModels, 'arima']\n                        : filters.predictionModels.filter(m => m !== 'arima');\n                      handleFilterChange('predictionModels', models);\n                    }}\n                  />\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Prophet\"\n                    checked={filters.predictionModels.includes('prophet')}\n                    onChange={(e) => {\n                      const models = e.target.checked \n                        ? [...filters.predictionModels, 'prophet']\n                        : filters.predictionModels.filter(m => m !== 'prophet');\n                      handleFilterChange('predictionModels', models);\n                    }}\n                  />\n                </Form.Group>\n\n                <Row className=\"mt-4\">\n                  <Col>\n                    <button \n                      className=\"btn btn-outline-primary btn-sm w-100\"\n                      onClick={exportGraph}\n                    >\n                      Export Graph\n                    </button>\n                  </Col>\n                  <Col>\n                    <button \n                      className=\"btn btn-outline-primary btn-sm w-100\"\n                      onClick={exportTable}\n                    >\n                      Export Table\n                    </button>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          {/* Content Column */}\n          <Col md={9}>\n            {/* Stats Cards */}\n            <Row className=\"mb-3\">\n              <Col md={3}>\n                <Card className=\"stat-card\">\n                  <Card.Body className=\"text-center p-3\">\n                    <div className=\"stat-label\">Current Level</div>\n                    <div className=\"stat-value\">{stats.current_level.toFixed(3)}m</div>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col md={3}>\n                <Card className={`stat-card ${stats['24h_change'] >= 0 ? 'green' : 'red'}`}>\n                  <Card.Body className=\"text-center p-3\">\n                    <div className=\"stat-label\">24h Change</div>\n                    <div className=\"stat-value\">\n                      {stats['24h_change'] >= 0 ? '+' : ''}{stats['24h_change'].toFixed(3)}m\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col md={3}>\n                <Card className=\"stat-card\">\n                  <Card.Body className=\"text-center p-3\">\n                    <div className=\"stat-label\">Avg. Temp</div>\n                    <div className=\"stat-value\">{stats.avg_temp.toFixed(1)}°C</div>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col md={3}>\n                <Card className=\"stat-card\">\n                  <Card.Body className=\"text-center p-3\">\n                    <div className=\"stat-label\">Anomalies</div>\n                    <div className=\"stat-value\">{stats.anomalies}</div>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n\n            {/* Tabs */}\n            <Card>\n              <Card.Body>\n                <Tabs activeKey={activeTab} onSelect={setActiveTab} className=\"mb-3\">\n                  <Tab eventKey=\"graph\" title=\"Graph View\">\n                    {loading ? (\n                      <div className=\"text-center p-5\">\n                        <div className=\"spinner-border text-primary\" role=\"status\">\n                          <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                      </div>\n                    ) : graphData.length > 0 ? (\n                      <Plot\n                        ref={plotRef}\n                        data={createPlot().data}\n                        layout={createPlot().layout}\n                        config={{ responsive: true }}\n                        style={{ width: '100%', height: '400px' }}\n                      />\n                    ) : (\n                      <div className=\"text-center p-5\">\n                        <p>No data to display. Select a station to view data.</p>\n                      </div>\n                    )}\n                  </Tab>\n                  \n                  <Tab eventKey=\"table\" title=\"Table View\">\n                    <div style={{ overflowX: 'auto', maxHeight: '400px' }}>\n                      {tableData.length > 0 ? (\n                        <>\n                          <table className=\"table table-dark table-striped\">\n                            <thead>\n                              <tr>\n                                <th>Date/Time</th>\n                                <th>Station</th>\n                                {filters.dataType === 'tides' ? (\n                                  <>\n                                    <th>High Tide (m)</th>\n                                    <th>High Tide Time</th>\n                                    <th>High Tide Temp (°C)</th>\n                                    <th>Low Tide (m)</th>\n                                    <th>Low Tide Time</th>\n                                    <th>Low Tide Temp (°C)</th>\n                                  </>\n                                ) : (\n                                  <>\n                                    <th>Sea Level (m)</th>\n                                    <th>Temperature (°C)</th>\n                                  </>\n                                )}\n                                <th>Anomaly</th>\n                                {filters.trendline !== 'none' && <th>Trendline Value</th>}\n                                {filters.analysisType !== 'none' && <th>Analysis Value</th>}\n                                {filters.predictionModels.includes('arima') && <th>ARIMA Prediction</th>}\n                                {filters.predictionModels.includes('prophet') && <th>Prophet Prediction</th>}\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {tableData\n                                .slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\n                                .map((row, idx) => (\n                                <tr key={idx}>\n                                  <td>{filters.dataType === 'tides' ? row.Date : new Date(row.Tab_DateTime).toLocaleString()}</td>\n                                  <td>{row.Station}</td>\n                                  {filters.dataType === 'tides' ? (\n                                    <>\n                                      <td>{row.HighTide?.toFixed(3) || 'N/A'}</td>\n                                      <td>{row.HighTideTime || 'N/A'}</td>\n                                      <td>{row.HighTideTemp?.toFixed(1) || 'N/A'}</td>\n                                      <td>{row.LowTide?.toFixed(3) || 'N/A'}</td>\n                                      <td>{row.LowTideTime || 'N/A'}</td>\n                                      <td>{row.LowTideTemp?.toFixed(1) || 'N/A'}</td>\n                                    </>\n                                  ) : (\n                                    <>\n                                      <td>{row.Tab_Value_mDepthC1?.toFixed(3) || 'N/A'}</td>\n                                      <td>{row.Tab_Value_monT2m?.toFixed(1) || 'N/A'}</td>\n                                    </>\n                                  )}\n                                  <td>{row.anomaly || 0}</td>\n                                  {filters.trendline !== 'none' && <td>{typeof row.trendlineValue === 'number' ? row.trendlineValue.toFixed(3) : row.trendlineValue}</td>}\n                                  {filters.analysisType !== 'none' && <td>{typeof row.analysisValue === 'number' ? row.analysisValue.toFixed(3) : row.analysisValue}</td>}\n                                  {filters.predictionModels.includes('arima') && <td>{predictions.arima && predictions.arima[idx] ? predictions.arima[idx].toFixed(3) : 'N/A'}</td>}\n                                  {filters.predictionModels.includes('prophet') && <td>{predictions.prophet && predictions.prophet[idx] ? predictions.prophet[idx].yhat?.toFixed(3) || predictions.prophet[idx].toFixed(3) : 'N/A'}</td>}\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                          <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                            <span className=\"text-muted\">\n                              Showing {((currentPage - 1) * itemsPerPage) + 1} to {Math.min(currentPage * itemsPerPage, tableData.length)} of {tableData.length} entries\n                            </span>\n                            <div>\n                              <button \n                                className=\"btn btn-outline-primary btn-sm me-2\"\n                                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                                disabled={currentPage === 1}\n                              >\n                                Previous\n                              </button>\n                              <span className=\"mx-2\">Page {currentPage} of {Math.ceil(tableData.length / itemsPerPage)}</span>\n                              <button \n                                className=\"btn btn-outline-primary btn-sm ms-2\"\n                                onClick={() => setCurrentPage(prev => Math.min(prev + 1, Math.ceil(tableData.length / itemsPerPage)))}\n                                disabled={currentPage === Math.ceil(tableData.length / itemsPerPage)}\n                              >\n                                Next\n                              </button>\n                            </div>\n                          </div>\n                        </>\n                      ) : (\n                        <p className=\"text-center\">No data to display</p>\n                      )}\n                    </div>\n                  </Tab>\n                  \n                  <Tab eventKey=\"map\" title=\"Map View\">\n                    <Tabs activeKey={mapTab} onSelect={setMapTab} className=\"mb-2\">\n                      <Tab eventKey=\"osm\" title=\"OpenStreetMap\">\n                        <MapView />\n                      </Tab>\n                      <Tab eventKey=\"govmap\" title=\"GovMap\">\n                        <MapView />\n                      </Tab>\n                    </Tabs>\n                  </Tab>\n                </Tabs>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}